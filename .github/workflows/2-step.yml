name: Step 2

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Step 1"]
    types:
      - completed

permissions:
  contents: write
  actions: write
  issues: write
  models: read

env:
  STEP_3_FILE: ".github/steps/3-step.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.7.0

  # This job is optional. We often call it a "grading job". If the step is not graded, remove it.
  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Find last comment
        id: find-last-comment
        uses: peter-evans/find-comment@v3
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          direction: last

      - name: Update comment - checking work
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          file: exercise-toolkit/markdown-templates/step-feedback/checking-work.md
          edit-mode: replace

      # START: Check practical exercise

      # Check for successful workflow run
      - name: Check for successful workflow run
        id: check-workflow-run
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ask-ai.yml',
              status: 'completed',
              conclusion: 'success'
            });
            if (runs.data.total_count > 0) {
              console.log('Found successful workflow run');
              return true;
            } else {
              core.setFailed('No successful workflow runs found');
              return false;
            }

      # Check if workflow has question input parameter
      - name: Check for question input parameter
        id: check-question-input
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const workflow = fs.readFileSync('.github/workflows/ask-ai.yml', 'utf8');
              if (workflow.includes('question:') && workflow.includes('inputs:')) {
                console.log('Found question input parameter');
                return true;
              } else {
                core.setFailed('Question input parameter not found');
                return false;
              }
            } catch (error) {
              core.setFailed(`Error reading workflow file: ${error.message}`);
              return false;
            }

      # Check if workflow has system-prompt parameter
      - name: Check for system-prompt parameter
        id: check-system-prompt
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const workflow = fs.readFileSync('.github/workflows/ask-ai.yml', 'utf8');
              if (workflow.includes('system-prompt:')) {
                console.log('Found system-prompt parameter');
                return true;
              } else {
                core.setFailed('System-prompt parameter not found');
                return false;
              }
            } catch (error) {
              core.setFailed(`Error reading workflow file: ${error.message}`);
              return false;
            }

      - name: Update comment - step results
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          edit-mode: replace
          file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          vars: |
            step_number: 2
            results_table:
              - description: "Checked for successful workflow run"
                passed: ${{ steps.check-workflow-run.outcome == 'success' }}
              - description: "Verified workflow accepts question input parameter"
                passed: ${{ steps.check-question-input.outcome == 'success' }}
              - description: "Verified workflow includes system-prompt parameter"
                passed: ${{ steps.check-system-prompt.outcome == 'success' }}

      # END: Check practical exercise

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise] # if check_step_work then "needs: [find_exercise, check_step_work]"
    runs-on: ubuntu-latest
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Create comment - step finished
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          vars: |
            next_step_number: 3

      - name: Create comment - add step content
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: ${{ env.STEP_3_FILE }}

      - name: Create comment - watching for progress
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "${{github.workflow}}"
          gh workflow enable "Step 3"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
