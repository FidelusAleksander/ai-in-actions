name: Step 3 # Last step of the exercise

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Step 2"]
    types:
      - completed

permissions:
  contents: write
  actions: write
  issues: write
  models: read

env:
  REVIEW_FILE: ".github/steps/x-review.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.7.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Find last comment
        id: find-last-comment
        uses: peter-evans/find-comment@v3
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          direction: last

      - name: Update comment - checking work
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          file: exercise-toolkit/markdown-templates/step-feedback/checking-work.md
          edit-mode: replace

      # START: Check practical exercise

      # Check if issue-analyzer.yml workflow file exists
      - name: Check if issue-analyzer.yml workflow exists
        id: check-workflow-exists
        continue-on-error: true
        uses: skills/exercise-toolkit/actions/file-exists@v0.7.0
        with:
          file: .github/workflows/issue-analyzer.yml

      # Check for successful workflow run
      - name: Check for successful workflow run
        id: check-workflow-run
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'issue-analyzer.yml',
              status: 'completed',
              conclusion: 'success'
            });
            if (runs.data.total_count > 0) {
              console.log('Found successful workflow run');
              return true;
            } else {
              core.setFailed('No successful workflow runs found');
              return false;
            }

      # Check for required permissions
      - name: Check for required permissions
        id: check-permissions
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const workflow = fs.readFileSync('.github/workflows/issue-analyzer.yml', 'utf8');
              const hasModelsRead = workflow.includes('models: read');
              const hasIssuesWrite = workflow.includes('issues: write');
              if (hasModelsRead && hasIssuesWrite) {
                console.log('Found required permissions');
                return true;
              } else {
                core.setFailed('Required permissions not found');
                return false;
              }
            } catch (error) {
              core.setFailed(`Error reading workflow file: ${error.message}`);
              return false;
            }

      - name: Update comment - step results
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          edit-mode: replace
          file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          vars: |
            step_number: 3
            results_table:
              - description: "Checked if issue-analyzer.yml workflow file exists"
                passed: ${{ steps.check-workflow-exists.outcome == 'success' }}
              - description: "Checked for successful workflow run"
                passed: ${{ steps.check-workflow-run.outcome == 'success' }}
              - description: "Verified workflow has proper permissions"
                passed: ${{ steps.check-permissions.outcome == 'success' }}

      # END: Check practical exercise

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

  post_review_content:
    name: Post review content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Create comment - step finished - final review next
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/lesson-review.md

      - name: Create comment - add review content
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: ${{ env.REVIEW_FILE }}

      - name: Disable current workflow
        run: gh workflow disable "${{github.workflow}}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  finish_exercise:
    name: Finish Exercise
    needs: [find_exercise, check_step_work, post_review_content]
    uses: skills/exercise-toolkit/.github/workflows/finish-exercise.yml@v0.7.0
    with:
      issue-url: ${{ needs.find_exercise.outputs.issue-url }}
      exercise-title: "AI in Actions"
